name: Deploy to VPS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        run: |
          docker compose -f docker-compose.yml build
          docker compose -f docker-compose.yml push

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Add VPS SSH host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 69.62.115.86 >> ~/.ssh/known_hosts

      - name: Set up SSH key for authentication
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VPS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: SSH into VPS and deploy
        uses: appleboy/ssh-action@v0.1.5
        with:
          host: 69.62.115.86
          username: root
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cd /home/root/projects/socialMediaAPI/social-media-microservice
            git pull origin main
            export JWT_SECRET_KEY="${{ secrets.JWT_SECRET_KEY }}"
            export CLOUDINARY_API_KEY="${{ secrets.CLOUDINARY_API_KEY }}"
            export CLOUDINARY_API_SECRET="${{ secrets.CLOUDINARY_API_SECRET }}"
            export CLOUDINARY_CLOUD_NAME="${{ secrets.CLOUDINARY_CLOUD_NAME }}"
            export MONGODB_URI="${{ secrets.MONGODB_URI }}"
            docker compose down
            docker compose up -d

      - name: Debug SSH connection (optional)
        run: |
          ssh -v -i ~/.ssh/id_rsa root@69.62.115.86 "echo 'SSH connection successful'"
        continue-on-error: true
